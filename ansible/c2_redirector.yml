---
- name: Set up C2 Redirector with Apache and SSL
  hosts: c2_redirector
  become: true
  vars:
    domain: "c2-redirectordomain.com"
    apache_sites_config: "/etc/apache2/sites-available/000-default-le-ssl.conf"

  tasks:
    - name: Gather facts from c2_havoc host to get its internal IP
      ansible.builtin.setup:
        filter: ansible_*  
      delegate_to: "{{ groups['c2_havoc'][0] }}"
      delegate_facts: true
      run_once: true

    - name: Set c2_internal_ip to c2_havoc's internal IP
      ansible.builtin.set_fact:
        c2_internal_ip: "{{ hostvars[groups['c2_havoc'][0]]['ansible_eth1']['ipv4']['address'] }}"
      run_once: true

    - name: Debug the c2_havoc internal IP
      ansible.builtin.debug:
        var: c2_internal_ip

    - name: Wait for DPG lock to be released
      ansible.builtin.wait_for:
        path: /var/lock/dpg.lock
        state: absent
        delay: 15
        timeout: 600
      register: lock_wait_result

    - name: Update APT package cache and upgrade packages safely
      ansible.builtin.apt:
        update_cache: yes
        upgrade: safe

    - name: Install Apache2
      ansible.builtin.apt:
        name: apache2
        state: present

    - name: Ensure Apache2 is running and enabled
      ansible.builtin.systemd:
        name: apache2
        state: started
        enabled: yes

    - name: Enable Apache modules
      ansible.builtin.apache2_module:
        name: "{{ item }}"
        state: present
      loop:
        - rewrite
        - proxy
        - proxy_http
        - ssl
      notify: Reload Apache

    - name: Install Certbot and Apache plugin
      ansible.builtin.apt:
        name:
          - certbot
          - python3-certbot-apache
        state: present
        update_cache: yes

    - name: Issue SSL certificate using Certbot
      ansible.builtin.command: "certbot --apache -d {{ domain }} --non-interactive --agree-tos --email admin@{{ domain }}.com"
      args:
        creates: "/etc/letsencrypt/live/{{ domain }}/cert.pem"
      notify: Restart Apache

    - name: Modify the 000-default-le-ssl.conf file to enable proxying and mod_rewrite
      ansible.builtin.blockinfile:
        path: "{{ apache_sites_config }}"
        create: yes
        insertbefore: '</VirtualHost>'
        marker: "# {mark} Port 443 BLOCK"
        block: |
          # Enable SSL Proxying
          SSLProxyEngine On

          # Disable forward proxying 
          ProxyRequests Off

          # Allow .htaccess overrides (for mod_rewrite)
          <Directory /var/www/html>
            AllowOverride All
          </Directory>

          # Enable mod_rewrite
          RewriteEngine On

          # Redirect if User-Agent is 'ThisIsNotC2' to c2_havoc internal IP
          RewriteCond %{HTTP_USER_AGENT} ^ThisIsNotC2$ [NC]
          RewriteRule ^(.*)$ https://{{ c2_internal_ip }}:8000/$1 [P,L]

          # Redirect all other User-Agents to Google
          RewriteCond %{HTTP_USER_AGENT} !^ThisIsNotC2$ [NC]
          RewriteRule ^(.*)$ https://www.google.com [R=302,L]

    - name: Add port 80 VirtualHost block after <IfModule mod_ssl.c>
      ansible.builtin.blockinfile:
        path: "{{ apache_sites_config }}"
        insertbefore: '^\s*<VirtualHost\s*\*:443>'
        marker: "# {mark} Port 80 BLOCK"
        block: |
          <VirtualHost *:80>
            ServerName {{ domain }}
            # Catch-all for any domain or IP access
            ServerAlias *

            # Redirect to HTTPS
            RewriteEngine On
            RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
          </VirtualHost>

    - name: Disable the default site 000-default.conf
      ansible.builtin.command: a2dissite 000-default.conf
      args:
        removes: /etc/apache2/sites-enabled/000-default.conf
      notify: Reload Apache

    - name: Verify Apache status
      ansible.builtin.command: systemctl status apache2
      register: apache_status
      ignore_errors: yes

    - name: Show Apache status
      ansible.builtin.debug:
        msg: "{{ apache_status.stdout }}"

  handlers:
    - name: Reload Apache
      ansible.builtin.systemd:
        name: apache2
        state: reloaded

    - name: Restart Apache
      ansible.builtin.systemd:
        name: apache2
        state: restarted
